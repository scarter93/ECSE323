/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 500000.0;
	SIMULATION_TIME = 500000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("beat")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bpm")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bpm[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("bpm[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bpm";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("count2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count2";
}

SIGNAL("count2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count2";
}

SIGNAL("count2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count2";
}

SIGNAL("count2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count2";
}

SIGNAL("count2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count2";
}

SIGNAL("enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tempo_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("beat")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.587;
		LEVEL 1 FOR 66900.0;
		LEVEL 0 FOR 135560.0;
		LEVEL 1 FOR 211020.0;
		LEVEL 0 FOR 86499.413;
	}
}

TRANSITION_LIST("bpm[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 250000.0;
		LEVEL 0 FOR 250000.0;
	}
}

TRANSITION_LIST("bpm[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 250000.0;
		LEVEL 0 FOR 250000.0;
	}
}

TRANSITION_LIST("bpm[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 250000.0;
		LEVEL 0 FOR 125000.0;
		LEVEL 1 FOR 125000.0;
	}
}

TRANSITION_LIST("bpm[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 250000.0;
		LEVEL 0 FOR 125000.0;
		LEVEL 1 FOR 125000.0;
	}
}

TRANSITION_LIST("bpm[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 250000.0;
		LEVEL 0 FOR 125000.0;
		LEVEL 1 FOR 125000.0;
	}
}

TRANSITION_LIST("bpm[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 125000.0;
		LEVEL 0 FOR 375000.0;
	}
}

TRANSITION_LIST("bpm[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 125000.0;
		LEVEL 0 FOR 125000.0;
		LEVEL 1 FOR 125000.0;
		LEVEL 0 FOR 125000.0;
	}
}

TRANSITION_LIST("bpm[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 125000.0;
		LEVEL 0 FOR 375000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 25000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("count2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19.228;
		LEVEL 1 FOR 66900.0;
		LEVEL 0 FOR 135560.0;
		LEVEL 1 FOR 211020.0;
		LEVEL 0 FOR 86500.772;
	}
}

TRANSITION_LIST("count2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.379;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 66880.0;
		LEVEL 1 FOR 67080.0;
		LEVEL 0 FOR 68480.0;
		LEVEL 1 FOR 8560.0;
		LEVEL 0 FOR 202460.0;
		LEVEL 1 FOR 86501.621;
	}
}

TRANSITION_LIST("count2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.24;
		LEVEL 1 FOR 33440.0;
		LEVEL 0 FOR 33440.0;
		LEVEL 1 FOR 33440.0;
		LEVEL 0 FOR 33640.0;
		LEVEL 1 FOR 34240.0;
		LEVEL 0 FOR 42800.0;
		LEVEL 1 FOR 34240.0;
		LEVEL 0 FOR 168220.0;
		LEVEL 1 FOR 86500.76;
	}
}

TRANSITION_LIST("count2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.363;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 16720.0;
			LEVEL 0 FOR 16720.0;
		}
		LEVEL 1 FOR 16720.0;
		LEVEL 0 FOR 16920.0;
		LEVEL 1 FOR 17120.0;
		LEVEL 0 FOR 17120.0;
		LEVEL 1 FOR 17120.0;
		LEVEL 0 FOR 25680.0;
		LEVEL 1 FOR 17120.0;
		LEVEL 0 FOR 17120.0;
		LEVEL 1 FOR 61780.0;
		LEVEL 0 FOR 106440.0;
		LEVEL 1 FOR 49560.0;
		LEVEL 0 FOR 36941.637;
	}
}

TRANSITION_LIST("count2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.268;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 8360.0;
			LEVEL 0 FOR 8360.0;
		}
		LEVEL 1 FOR 8360.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 8560.0;
			LEVEL 1 FOR 8560.0;
		}
		LEVEL 0 FOR 17120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8560.0;
			LEVEL 0 FOR 8560.0;
		}
		LEVEL 1 FOR 8560.0;
		LEVEL 0 FOR 53220.0;
		LEVEL 1 FOR 53220.0;
		LEVEL 0 FOR 53220.0;
		LEVEL 1 FOR 24780.0;
		LEVEL 0 FOR 24780.0;
		LEVEL 1 FOR 24780.0;
		LEVEL 0 FOR 12160.732;
	}
}

TRANSITION_LIST("enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("tempo_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 39.095;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 8340.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 8540.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 8540.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.986;
			LEVEL 0 FOR 53199.014;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 19.875;
			LEVEL 0 FOR 24760.125;
		}
		LEVEL 1 FOR 19.875;
		LEVEL 0 FOR 12161.03;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bpm";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "bpm[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "tempo_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "beat";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "count2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "count2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

TIME_BAR
{
	TIME = 12100;
	MASTER = TRUE;
}
;
